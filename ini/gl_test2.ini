#include ini/basic_feeds.ini
#system geometry 1440 900 ARGB
include ini/basis.ini
#system frame rate 30
system host allow 192.168.3.100/24 127.0.0.1

feed idle 4 100 frames/CopenhagenSuborbitals-1024x576.bgra

image load 2 images/GL/worldmap-1280x720.png
image load 3 images/GL/worldmap-1280x720-no-water.png
image load 4 images/GL/earthmap-clouds-1440x720.png
image load 5 images/GL/moon-flat-1440x720.png
image load 6 images/GL/stars-1280x720.png
image load 7 images/GL/world-map-night-electric-1440x720.png

#glshape context osmesa

# Defining Textures
glshape texture add 0 Mixer Frame
glshape texture add 1 Feed #1
glshape texture add 2 Feed #2
glshape texture add 3 Feed #3
glshape texture add 4 Feed #4
glshape texture add 5 Feed #4
glshape texture add 6 Worldmap
glshape texture add 7 Worldmap no water
glshape texture add 8 Moonmap
glshape texture add 9 Stars
glshape texture add 10 Worldmap Night
glshape texture source 0 frame 0
glshape texture source 1 feed 1
glshape texture source 2 feed 2
glshape texture source 3 feed 3
glshape texture source 4 feed 4
glshape texture source 5 feed 5 cube
glshape texture source 6 image 4		# Earth
glshape texture source 7 image 3		# Earth transparent
glshape texture source 8 image 5		# Moon
glshape texture source 9 image 6		# Star background


# Defining some vector constants primarily for lights and matrial 
glshape vector add 1 Ambient
glshape vector value 1 0.05 0.05 0.1 1.0
glshape vector add 2 Diffuse
glshape vector value 2 4.0 4.0 4.0 1.0
glshape vector add 3 Specular
glshape vector value 3 1.0 1.0 1.0 1.0
glshape vector add 4 Position
glshape vector value 4 1.0 1.0 1.0 0.0
glshape vector add 5 Red Mat
glshape vector value 5 1.0 0.2 0.2 1.0
glshape vector add 6 Green Mat
glshape vector value 6 0.2 1.0 0.2 1.0
glshape vector add 7 Blue Mat
glshape vector value 7 0.2 0.2 1.0 1.0
glshape vector add 8 Test
glshape vector value 8 1000.0 1.0 300.0 0.0

glshape vbo add 1 Quad
#glshabe vbo config <vbo id> [(static|dynamic|stream) <form> (n3 | t2 | t3 | v3 | c3 | c4) ...]
glshape vbo config 1 static quads t2 v3
glshape vbo data 1  0.0 0.0 -0.5 -0.5 0.0  1.0 0.0 0.5 -0.5 0.0  1.0 1.0 0.5 0.5 0.0  0.0 1.0  -0.5 0.5 0.0
#glshabe vbo indices <vbo id> [<index 0> <index 1> ...]
glshape vbo indices 1 0 1 2 3


# Defining a shape for light
glshape add 10 Setup Lights
glshape enable 10 lighting
glshape enable 10 light0
glshape light 10 light0 ambient  1.0
glshape lightv 10 light0 ambient 1
glshape lightv 10 light0 diffuse 2
glshape lightv 10 light0 specular 3
glshape lightv 10 light0 position 8

# Shape 1 is executed automatically when the GL context is created
glshape add 1 OpenGL Context Creation Setup
  glshape clear 1 depth+color		# Clear color and depth
  glshape loadidentity 1		# Load identity matrix
  glshape matrixmode 1 projection	# Set projection matrix
  glshape viewport 1 0 0 0 0		# Viewport set to 0,0,width,height
  glshape inshape 1 10

glshape add 4 dummy 
##############################################
# Shape 2 is executed once for every frame the first time a shape is overlayed for a frame
glshape add 2 Shape 1 is executed once for every frame a glshape is placed
  #glshape if glx clear 2 depth+color
  glshape clear 2 depth+color
  #glshape if osmesa clear 2 depth
  glshape disable 2 depth_test		# disable dept (z-axis)
  glshape loadidentity 2		# Load identity matrix
  glshape matrixmode 2 projection
  #glshape rotate 2 180 0 0 1
  glshape ortho 2 -0.5 0.5 -0.5 0.5 0 100
  glshape color 2 1 1 1 1
  glshape if glx 2 inshape 2 4		# Add background image
  glshape loadidentity 2		# Load identity matrix
#  glshape viewport 2 0 0 0 0		# Viewport set to 0,0,width,height
  glshape enable 2 depth_test		# Enable dept (z-axis)
  glshape enable 2 blend		# Enable blend (alpha)
  glshape blendfunc 2 src_alpha one_minus_src_alpha	# Set alpha blending
#  glshape matrixmode 2 projection
  glshape loadidentity 2
#  glshape ortho 2 -2.5 2.5 -2.5 2.5 -100.0 100.0
  glshape gluperspective 2 45.0 1.77777777778 1.0 200.0
  glshape matrixmode 2 modelview
  glshape loadidentity 2		# Reset drawing perspective
  glshape shademodel 2 smooth
  glshape if glx 2 scale 2 1 1 1
  glshape rotate 2 0 1 0 0		# Rotate Camera angle. Angle
					# must be negative of what is wanted
  glshape translate 2 0 0 -14		# Moved back 14 steps


##############################################
glshape add 4 Loading the baseframe into OpenGL
  glshape pushmatrix 4
    glshape disable 4 lighting
    glshape enable 4 texture_2d			# Enabling 2D texture
    glshape texture bind 4 9 nearest nearest	# Bind texture 0
    #glshape texture bind 4 2 linear linear
    glshape translate 4 0 0 100
    glshape scale 4 2.2 1.245 1.0
    glshape color 4 1 1 1 1
    #glshape inshape 4 4
    glshape vbo 4 1
    glshape disable 4 texture_2d		# Disabling 2D texture
    glshape flush 4
    glshape enable 4 lighting
  glshape popmatrix 4

glshape add 5 Unit Square Textured Vertex. Same as vbo0
  glshape begin 5 quads			# Begin a 4 point polygon
    glshape normal 5 0 0 1
    glshape texcoord 5 0 0		# Using current texture from left bottom
    glshape vertex 5 -0.5 -0.5 0	# Lower left corner
    glshape texcoord 5 1 0		# Using current texture to right bottom
    glshape vertex 5 0.5 -0.5 0		# Lower right corner
    glshape texcoord 5 1 1		# Using current texture to right top
    glshape vertex 5 0.5 0.5 0		# Upper right corner
    glshape texcoord 5 0 1		# Using current texture to left top
    glshape vertex 5 -0.5 0.5 0		# Upper left corner
  glshape end 5				# end quads

glshape add 6 Rectangle with Feed Texture. 16:9
  glshape texture bind 6 4		# Binding texture
  glshape scale 6 1.777777778 1 1	# Scale for 16:9
  glshape inshape 6 1			# Include the unit square shape with texture

glshape add 7 Rectangle with Feed Texture. 16:9
  glshape texture bind 7 4
  glshape scale 7 1.777777778 1 1	# Scale for 16:9
  glshape inshape 7 1			# Include the unit square shape with texture

glshape add 14 Earth
  #glshape disable 14 lighting
  glshape rotate 14 -90 1 0 0
  glshape enable 14 texture_2d
  glshape glunormals 14 1 smooth
  glshape texture bind 14 6 linear_mipmap_linear linear
  glshape glutexture 14 1 1		# Attach bound texture to GLU quad no. 1.
  glshape normal 14 10 1 4
  glshape glusphere 14 1 1.0 90 20		# Draw a sphere
  glshape disable 14 texture_2d
  #glshape enable 14 lighting

glshape add 15 Moon
  #glshape disable 15 lighting
  glshape rotate 15 -90 1 0 0
  glshape enable 15 texture_2d
  #glshape glunormals 15 1 smooth
  glshape texture bind 15 8 linear_mipmap_linear linear 2d
  glshape glutexture 15 2 1		# Attach bound texture to GLU quad no. 1.
  glshape normal 15 10 1 4
  glshape color 15 0.2 0.2 0.2 0.1
  glshape glusphere 15 2 0.273 90 20		# Draw a sphere
  glshape disable 15 texture_2d
  glshape color 15 1 1 1 1
  #glshape enable 15 lighting

glshape add 16 Curve
  glshape translate 16 0 0 0.5
  glshape disable 16 lighting
  glshape enable 16 texture_2d
  glshape texture bind 16 4 linear linear
  #glshape texture bind 16 4 nearest nearest
  #glshape scale 16 1.777777777 1 1.77777777777
  glshape arcxz 16 -75 1.77777777 12 0.0 1.0 1.0 0.0
  glshape arcyz 16 -75 1.77777777 12 0.0 1.0 1.0 0.0
  glshape enable 16 lighting
#glshape entry 16 5 inactivate
glshape entry 16 6 activate
glshape entry 16 5 activate
#glshape entry 16 6 inactivate

glshape add 8 Sphere with texture
  glshape disable 8 lighting
  glshape translate 8 0 0 0
  glshape rotate 8 -90 1 0 0
#  glshape rotate 8 -25 1 0 0
#  glshape scale 9 1 1 -1
#  glshape rotate 8 0 0 0 1
  glshape enable 8 texture_2d
  glshape glunormals 8 1 smooth
  #glshape color 8 0.3 0.3 0.9
  glshape texture bind 8 6
  #glshape inshape 8 4			# Bind texture
#  glshape rotate 8 75 1 0 0
#  glshape rotate 8 0 0 0 1
  glshape glutexture 8 1 1		# Attach bound texture to GLU quad no. 1.
  #glshape scale 8 1 -1 1
  glshape glusphere 8 1 1 90 30	# Draw a sphere
  #glshape glucylinder 8 1 0.8 0.8 2 32 1
  glshape disable 8 texture_2d
  glshape enable 8 lighting

glshape add 9 Sphere
  #glshape glunormals 9 1 smooth
  #glshape scale 9 1 -1 1
  glshape materialv 9 front_and_back ambient_and_diffuse 7
  glshape glusphere 9 1 0.6 90 20
  #glshape glucylinder 9 1 0.8 0.8 2 32 1

glshape add 12 Teapot
glshape inshape 12 5
glshape glutteapot 12 solid 1


# glshape place <place id> <shape id> <x> <y> <z> [<scale x> <scale y> <scale z>]
#glshape place 1 12 0  -0.1   -4 3.4 3.4 3.4
#glshape place 2 8 0  -0.1   -4 3.4 3.4 3.4

glshape place 3 14 0 0 -1 2 2 2
glshape place 4 15 4 0 -1 2 2 2
glshape place 5 16 0 0 -1 8 8 8
#glshape place rotation 5 0 1 0 0
#glshape place alpha 5 0

#glshape place 2 8 0  -0.1   -2 2 2 2
#glshape place 1 6 -2  2   0
#glshape place 2 6 0  1.0 1.0
#glshape place 3 6 1.7778 -0.1 1.2
#glshape place 4 8 0 0 0
#glshape place rotation 2 -90 1 0 0
#glshape place rotation 3 90 0 1 0
#glshape place alpha 2 0.6


text string 1 Snowmix 3D Test
text font 1 Sans Bold 18
text place 1 1 1 0 0 1 1 1 s
#text align 1 center bottom
#text anchor 1 s

command create Show
  text overlay 1
  image overlay all
#  glshape overlay all
   glshape overlay 3 5 4
#  glshape overlay 2 
#  glshape overlay 3
#  glshape overlay 4
#  glshape overlay 5
  glshape if glx glshape copyback frame
  tcl eval SetAngle 3 0.15 0 1 0
  tcl eval SetMoonCoor 4 0.40 7.5 0 -1
  tcl eval SetCurveAngle 5 -0.5 1.0 0.0 0.0
#  tcl eval SetArcXZ 16 5 2.7
  tcl eval AnimateArc 16 5  0.67
  tcl eval AnimateArc 16 6  0.67
  loop
command end
overlay finish Show
stack 0 1 2 3 4
stack  0
command create Rotate.tcl
  set angle 0
  set anglemoon 0
  set deltamoon 0
  set curveangle 0
  set PI [expr 4.0*atan(1.0)]
  proc SetCurveAngle { place_id delta x y z } {
    global curveangle
    set curveangle [expr $curveangle + $delta]
    if {$curveangle >= 360} { set curveangle [expr $curveangle - 360] }
    if {$curveangle <= -360} { set curveangle [expr $curveangle + 360] }
    set scale [expr 8 * (0.5 + $curveangle / 720.0)]
    snowmix parse "gl place rotation $place_id $curveangle $x $y $z"
    #snowmix parse "gl place scale $place_id $scale $scale 8"
  }

  proc SetAngle { place_id delta x y z } {
    global angle
    set angle [expr $angle + $delta]
    if {$angle >= 360} { set angle [expr $angle - 360] }
    if {$angle <= -360} { set angle [expr $angle + 360] }
    snowmix parse "gl place rotation $place_id $angle $x $y $z"
  }
  proc SetMoonCoor { place_id delta rx ry rz } {
    global anglemoon PI deltamoon
    set anglemoon [expr $anglemoon + $delta]
    if {$anglemoon >= 360} { set anglemoon [expr $anglemoon - 360] }
    if {$anglemoon <= -360} { set anglemoon [expr $anglemoon + 360] }
    set angle [expr ($anglemoon + $deltamoon )* 2 * $PI / 360]
    set deltamoon [expr $deltamoon + 0.111111]
    if {$deltamoon >= 360} { set deltamoon [expr $deltamoon - 360] }
    set x [expr $rx * cos($angle)]
    set z [expr ($rx + 4.5) * sin($angle) + $rz]
    set y [expr $ry + 0.5 * cos($angle)]
    snowmix parse "gl place coor $place_id $x $y $z "
    snowmix parse "gl place rotation $place_id $anglemoon 0 -1 0"
  }

  set arcxzangle -180
  set arcxzdir 1
  proc SetArcXZ { shape_id entry delta } {
        global arcxzangle arcxzdir
        set newangle [expr $arcxzangle + $delta]
        if {$newangle < -180} { set arcxzdir 1 }
        if {$newangle > 180} { set arcxzdir -1 }
        set arcxzangle [expr $arcxzangle + $arcxzdir * $delta]
        snowmix parse "glshape modify $shape_id $entry 1 $arcxzangle "
        #puts "glshape modify $shape_id $entry 1 $arcxzangle"
  }
  #set arcres 12
  set arcangle 1
  set arcanidir 1
  proc AnimateArc { shape_id entry delta } {
	global arcres arcangle arcanidir
	if { $arcangle > 180 } { set arcanidir -1
	} elseif { $arcangle < -180 } { set arcanidir 1
	} else {
		snowmix parse "glshape modify $shape_id $entry 1 $arcangle"
	}
#puts "angle $arcangle"
	set arcangle [expr $arcangle + $delta * $arcanidir]
  }
command end

tcl exec Rotate.tcl

#gl place alpha 3 0
#gl place alpha 4 0
#gl place alpha 5 0
glshape verbose 0
