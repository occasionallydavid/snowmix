# Virtual Feeds Settings
# Copyright by Peter Maersk-Moller 2012 - All rights reserved
#verbose

require version 0.4.4

include ini/basis.ini

# Stack (overlay) feed 0. Feed 0 has previously been set to black.
stack  0

# Define some text strings identified by their text id.
text string 0 Snowmix Virtual Feed 2 Setup by Peter Maersk-Moller
text string 1 This is feed #1
text string 2 This is feed #2
text string 3 This is feed #3
text string 4 This is feed #4
text string 5 Find the Snowmix project and its documentation at http://snowmix.sourceforge.net/index.html - See Snowmix in action at https://www.youtube.com/user/Snowmix4video. Find out more about Copenhagen Suborbitals at http://www.copsub.com 
text string 6 [#RUNTIME,1]
text string 7 [#RUNTIME,2]
text string 8 [#RUNTIME,3]
text string 9 [#RUNTIME,4]
text string 10 [#FEEDSTATE,2,RUNNING]Running 2
text string 11 [#FEEDSTATE,2,PENDING]Pending 2
text string 12 [#FEEDSTATE,2,STALLED]Stalled 2
text string 13 [#FEEDSTATE,2,DISCONNECTED]Lost Signal 2
text string 20 [#DATETIME] CET

# This defines 3 font selections identified by their font id
text font 0 Sans Bold 8
text font 1 Sans Bold 12
text font 2 Sans Bold 14
text font 0 Sans Bold 7

# text place <place id> <text id> <font id> <x> <y> <red> <green> <blue> <achor>
text place 0 0 0 4 -4 1.0 1.0 1.0 1.0 sw
text align 0 left bottom
text backgr 0 20 40 2 4 0 0 0 1.0
text backgr linpat 0 0.00 0.0 0.0 0.0 1.0
text backgr linpat 0 0.86 0.0 0.0 0.0 1.0
text backgr linpat 0 0.92 0.0 0.0 0.0 0.5
text backgr linpat 0 1.00 0.0 0.0 0.0 0.0

command create textplace_feed_4
  # This places the header text for feed 4 aligned at center,top. The 'nw'
  # reference means counting from north-west (0,0). Text background is added
  # extending 20 pixels to the left and right and 2 pixels at the top and bottom.
  # The text background is made out linear pattern defined from 0% over 10%, 50%
  # 90% to 100%. Furthermore the linear pattern is defines as vertical 'v'.
  text place 4 4 2 352 0 1.0 1.0 1.0 1.0 nw
  text align 4 center top
  text backgr 4 20 20 2 2 0 0 0 1.0
  text backgr linpat 4 0.00 .239 .239 .239 0.0 v
  text backgr linpat 4 0.10 .439 .439 .439 0.7 v
  text backgr linpat 4 0.50 .839 .839 .839 0.9 v
  text backgr linpat 4 0.90 .439 .439 .439 0.7 v
  text backgr linpat 4 1.00 .039 .039 .039 0.0 v

  # This places text id 9 relative to the south-east (right-bottom)
  # corner. Text id 9 is defined as a video timer clock
  text place 9 9 0 5 -19 0.8 0.8 0.8 1.0 sw
  text align 9 left bottom
  text backgr 9 5 5 0 0 0 0 0 0.3
command end

command create textplace_feed_1
  # This places the header text for feed 1 aligned at center,top. The 'nw'
  # reference means counting from north-west (0,0). Text background is added
  # extending 15 pixels to the left and right.
  # The text background is made out linear pattern defined from 0% over 10%, 90%
  # to 100%. Furthermore the linear pattern is defines as horizontal 'h' though
  # the letter 'h' has been omitted at the end of the linear pattarn definition
  # as it is the default orientation
  text place 1 1 1 864 0 1.0 1.0 1.0 1.0 nw
  text align 1 center top
  text backgr 1 15 15 0 0 0 0 0 1.0
  text backgr linpat 1 0.00 1.0 0.0 0.0 0.0
  text backgr linpat 1 0.10 1.0 0.0 0.0 0.5
  text backgr linpat 1 0.90 1.0 0.0 0.0 0.5
  text backgr linpat 1 1.00 1.0 0.0 0.0 0.0

  # This places text id 6 relative to the south-east (right-bottom)
  # corner. Text id 6 is defined as a video timer clock
  text place 6 6 0 0 192 0.8 0.8 0.8 1.0 ne
  text align 6 right bottom
  text backgr 6 5 5 0 0 0 0 0 0.3
command end

command create textplace_feed_2
  # This places the header text for feed 2 aligned at center,top. The 'nw'
  # reference means counting from north-west (0,0). Text background is added
  # extending 15 pixels to the left and right.
  # The text background is made out linear pattern defined from 0% over 10%, 90%
  # to 100%. Furthermore the linear pattern is defines as horizontal 'h' though
  # the letter 'h' has been omitted at the end of the linear pattarn definition
  # as it is the default orientation
  text place 2 2 1 864 192 0.2 0.2 0.2 1.0 nw
  text align 2 center top
  text backgr 2 15 15 0 0 0 0 0 1.0
  text backgr linpat 2 0.00 1.0 1.0 0.0 0.0
  text backgr linpat 2 0.10 1.0 1.0 0.0 0.5
  text backgr linpat 2 0.90 1.0 1.0 0.0 0.5
  text backgr linpat 2 1.00 1.0 1.0 0.0 0.0

  # This places text id 7 relative to the south-east (right-bottom)
  # corner. Text id 7 is defined as a video timer clock
  text place 7 7 0 -64 96 0.8 0.8 0.8 1.0 e
  text align 7 left bottom
  text backgr 7 5 5 0 0 0 0 0 0.3

  # The next 4 entries places the conditional text. Text id 10-13 has been
  # defined as conditional text showing the feed state.
  text place 10 10 1 860 288 0.4 0.4 0.4
  text place 11 11 1 860 288 0.4 0.4 0.4
  text place 12 12 1 860 288 0.4 0.4 0.4
  text place 13 13 1 860 288 0.4 0.4 0.4
  text align 10 center middle
  text align 11 center middle
  text align 12 center middle
  text align 13 center middle
command end

command create textplace_feed_3
  # This places the header text for feed 3 aligned at center,top. The 'nw'
  # reference means counting from north-west (0,0). Text background is added
  # extending 15 pixels to the left and right.
  # The text background is made out linear pattern defined from 0% over 10%, 90%
  # to 100%. Furthermore the linear pattern is defines as horizontal 'h' though
  # the letter 'h' has been omitted at the end of the linear pattarn definition
  # as it is the default orientation
  text place 3 3 1 864 384 1.0 1.0 1.0 1.0 nw
  text align 3 center top
  text backgr 3 15 15 0 0 0 0 0 1.0
  text backgr linpat 3 0.00 0.0 1.0 1.0 0.0
  text backgr linpat 3 0.10 0.0 1.0 1.0 0.5
  text backgr linpat 3 0.90 0.0 1.0 1.0 0.5
  text backgr linpat 3 1.00 0.0 1.0 1.0 0.0

  # This places text id 8 relative to the south-east (right-bottom)
  # corner. Text id 8 is defined as a video timer clock
  text place 8 8 0 20 -29 0.8 0.8 0.8 1.0 se
  text align 8 right bottom
  text backgr 8 5 5 0 0 0 0 0 0.3
command end

# This places the very long left scrolling text. The text is placed relative
# to south-east 'se' meaning 1024,576. A flat semi transparent gray'ish text
# back ground is added. Last but not least, the text is set to move 2 pixels
# to the left from its start position until it reaches x=-2700. Then it moves
# back to its start position and starts over.
text place 5 5 1 0 0 0.8 0.8 0.8 1.0 se
text align 5 left bottom
text backgr 5 1024 2400 0 0 0 0 0 0.3
text repeat move 5 -2 0 -2700 0

# This places text id 20 relative to the north-east (right-top)
# corner. Text id 20 is defined as a date and time clock
text place 20 20 0 352 -19 0.8 0.8 0.8 1.0 sw
text align 20 center bottom
text backgr 20 15 15 0 0 0 0 0 0.3

# The first 12 frames nothing is done, then 4 texts are moved outside the frame
# and nothing is done for the next 20 frames. Then the text is moved back
# into the frame and the command is looped.
command create Blink_Feed_2_State
  next 12
  text alpha 10 0.0
  text alpha 11 0.0
  text alpha 12 0.0
  text alpha 13 0.0
  next 20
  text alpha 10 1.0
  text alpha 11 1.0
  text alpha 12 1.0
  text alpha 13 1.0
  loop
command end

command create create_virtual_feed_1_2_3_4
  virtual feed add 1 Feed #1
  virtual feed source feed 1 1
  virtual feed add 2 Feed #2
  virtual feed source feed 2 2
  virtual feed add 3 Feed #3
  virtual feed source feed 3 3
  virtual feed add 4 Feed #4
  virtual feed source feed 4 4
command end

# Place feed 4 as the main feed and 1,2,3 as the scaled feeds to the right
command create place_virtual_feed_4_1_2_3
  # Feed #1 at 704,0
  virtual feed place rect 1 704 0 320 192 16 48 0.0 0.5 0.5 1.0
  text place 1 1 1 864 0 1.0 1.0 1.0 1.0 nw
  text coor 6 -64 192 ne

  # Feed #2 at 704,192
  virtual feed place rect 2 704 192 320 192 16 48 0.0 0.5 0.5 1.0
   text place 2 2 1 864 192 0.2 0.2 0.2 1.0 nw
   text place 7 7 0 -64 96 0.8 0.8 0.8 1.0 e
   text place 10 10 1 860 288 0.4 0.4 0.4
   text place 11 11 1 860 288 0.4 0.4 0.4
   text place 12 12 1 860 288 0.4 0.4 0.4
   text place 13 13 1 860 288 0.4 0.4 0.4

  # Feed #3 at 704,384
  virtual feed place rect 3 704 384 320 192 16 48 0.0 0.5 0.5 1.0
   text place 3 3 1 864 384 1.0 1.0 1.0 1.0 nw
   text place 8 8 0 0 -19 0.8 0.8 0.8 1.0 se

  # Feed 4 at 0,0 in the main window
  virtual feed place rect 4 0 0 704 576 160 0 0.0 1.0 1.0 1.0
   text place 4 4 2 352 0 1.0 1.0 1.0 1.0 nw
   text coor 9 5 -19 sw
  loop
command end

# Place feed 1 as the main feed and 4,2,3 as the scaled feeds to the right
command create place_virtual_feed_1_4_2_3
  virtual feed place rect 1 0 0 704 576 0 0 0.0 1.0 1.0 1.0
   text place 1 1 2 352 0 1.0 1.0 1.0 1.0 nw
   text coor 6 5 -19 sw
  virtual feed place rect 2 704 192 320 192 16 96 0.0 0.5 0.5 1.0
   text place 2 2 1 864 192 0.2 0.2 0.2 1.0 nw
   text place 7 7 0 -64 96 0.8 0.8 0.8 1.0 e
   text place 10 10 1 860 288 0.4 0.4 0.4
   text place 11 11 1 860 288 0.4 0.4 0.4
   text place 12 12 1 860 288 0.4 0.4 0.4
   text place 13 13 1 860 288 0.4 0.4 0.4
  virtual feed place rect 3 704 384 320 192 16 96 0.0 0.5 0.5 1.0
   text place 3 3 1 864 384 1.0 1.0 1.0 1.0 nw
   text place 8 8 0 -64 -19 0.8 0.8 0.8 1.0 se
  virtual feed place rect 4 704 0 1024 576 0 0 0.0 0.3333333333 0.3333333333 1.0
   text place 4 4 1 864 0 1.0 1.0 1.0 1.0 nw
   text coor 9 -64 192 ne
  loop
command end

# Place feed 2 as the main feed and 1,4,3 as the scaled feeds to the right
command create place_virtual_feed_2_1_4_3
  # Feed #1 at 704,0
  virtual feed place rect 1 704 0 320 192 16 48 0.0 0.5 0.5 1.0
  text place 1 1 1 864 0 1.0 1.0 1.0 1.0 nw
  text coor 6 -64 192 ne

  # Feed #2 at 704,192
  virtual feed place rect 2 0 0 704 576 0 0 0.0 1.0 1.0 1.0
   text place 2 4 1 864 192 0.2 0.2 0.2 1.0 nw
   #text place 7 7 0 -64 96 0.8 0.8 0.8 1.0 e
   text coor 7 5 -19 sw
   text place 10 10 1 352 288 0.4 0.4 0.4
   text place 11 11 1 352 288 0.4 0.4 0.4
   text place 12 12 1 352 288 0.4 0.4 0.4
   text place 13 13 1 352 288 0.4 0.4 0.4

  # Feed #2 at 704,384
  virtual feed place rect 3 704 384 320 192 16 96 0.0 0.5 0.5 1.0
   text place 3 3 1 864 384 1.0 1.0 1.0 1.0 nw
   text place 8 8 0 -64 -19 0.8 0.8 0.8 1.0 se

  # Feed 4 at 0,0 in the main window
  virtual feed place rect 4 704 192 1024 576 0 0 0.0 0.333333333 0.333333333 1.0
   text place 4 2 2 352 0 1.0 1.0 1.0 1.0 nw
   text coor 9 -64 96 e
  loop
command end

# This will make the text grow from left to right
command create grow_text
  next 100
  text grow 0 0 5
  next 100
  text grow 1 1
  next 100
  text grow 2 1
  next 100
  text grow 3 1
  next 100
  text grow 4 1
  loop
command end

# Run the next two command to create the virtual feeds and to place them
textplace_feed_1
textplace_feed_2
textplace_feed_3
textplace_feed_4
create_virtual_feed_1_2_3_4
place_virtual_feed_4_1_2_3

# Move scaled feed 1,2,3 from position right to the right outside overlay
command create moving_feed_1_2_3_to_right
  virtual feed move coor 1 10 0 32 32
  virtual feed move coor 2 10 0 32 32
  virtual feed move coor 3 10 0 32 32
  virtual feed move clip 4 -5 0 10 0 32 32 32 32
  text move coor 1 10 0 32 32
  text move coor 2 10 0 32 32
  text move coor 3 10 0 32 32
  text move coor 4 5 0 32 32
  text move coor 6 10 0 32 32
  text move coor 7 10 0 32 32
  text move coor 8 10 0 32 32
  text move coor 10 10 0 32 32
  text move coor 11 10 0 32 32
  text move coor 12 10 0 32 32
  text move coor 13 10 0 32 32
  text move coor 20 5 0 32 32
command end

# Move scaled feed 1,2,3 from position right outside overlay back in to the right side
command create moving_feed_1_2_3_back_in_from_right
  virtual feed move coor 1 -10 0 32 32
  virtual feed move coor 2 -10 0 32 32
  virtual feed move coor 3 -10 0 32 32
  virtual feed move clip 4 5 0 -10 0 32 32 32 32
  text move coor 1 -10 0 32 32
  text move coor 2 -10 0 32 32
  text move coor 3 -10 0 32 32
  text move coor 4 -5 0 32 32
  text move coor 6 -10 0 32 32
  text move coor 7 -10 0 32 32
  text move coor 8 -10 0 32 32
  text move coor 10 -10 0 32 32
  text move coor 11 -10 0 32 32
  text move coor 12 -10 0 32 32
  text move coor 13 -10 0 32 32
  text move coor 20 -5 0 32 32
command end

command create swop_feed4_large_feed1_small_top_right
  # scale vf4 down to 1/3 and move to 704,0
  virtual feed move scale 4 -0.020833333 -0.020833333 32 32
  virtual feed move coor 4 22 0 32 32
  virtual feed move clip 4 -5 0 10 0 32 32 32 32
  # scale vf1 up to 1/1 and move to 0,0
  virtual feed move scale 1 0.0156250 0.0156250 32 32
  virtual feed move coor 1 -22 0 32 32
  virtual feed move clip 1 -1 -3 12 12 16 16 32 32
  text move coor 1 -16 0 32 32
  text move coor 4 16 0 32 32
  text move coor 6 -29 11 32 32
  text move coor 9 30 -11 32 32
  next 32
  # Set vf4 and vf1 precise in case of rouding errors
  virtual feed place rect 1 0 0 704 576 0 0 0.0 1.0 1.0 1.0
  virtual feed place rect 4 704 0 1024 576 0 0 0.0 0.333333333 0.3333333333 1.0
  text place 9 9 0 -64 192 0.8 0.8 0.8 1.0 ne
  text place 6 6 0 5 -19 0.8 0.8 0.8 1.0 sw
command end

command create swop_feed1_large_feed4_small_top_right
  # SCale vf4 up and move to 0,0
  virtual feed move scale 4 0.020833333 0.020833333 32 32
  virtual feed move coor 4 -22 0 32 32
  virtual feed move clip 4 5 0 -10 0 32 32 32 32
  # Scale vf1 down and move to 704,0
  virtual feed move scale 1 -0.0156250 -0.0156250 32 32
  virtual feed move coor 1 22 0 32 32
  virtual feed move clip 1 1 3 -12 -12 16 16 32 32
  text move coor 1 16 0 32 32
  text move coor 4 -16 0 32 32
  text move coor 6 29 -11 32 32
  text move coor 9 -30 11 32 32
  next 32
  # Restore feed 1 to 704,0 and feed 4 to 0,0 precise in case of rouding errors
  virtual feed place rect 1 704 0 320 192 16 48 0.0 0.5 0.5 1.0
  virtual feed place rect 4 0 0 704 576 160 0 0.0 1.0 1.0 1.0
  text place 1 1 1 864 0 1.0 1.0 1.0 1.0 nw
  text place 9 9 0 5 -19 0.8 0.8 0.8 1.0 sw
  text place 6 6 0 0 192 0.8 0.8 0.8 1.0 ne
  text place 4 4 2 352 0 1.0 1.0 1.0 1.0 nw
command end

command create swop_feed4_large_feed2_small_middle
  # Scale vf4 to 1/3 centered and move to right middle
  virtual feed move scale 4 -0.020833333 -0.020833333 32 32
  virtual feed move coor 4 22 6 32 32
  virtual feed move clip 4 -5 0 10 0 32 32 32 32
  text move coor 4 16 6 32 32
  text move coor 9 29 -5 32 32
  # Scale vf2 to 1.0 and move to the left
  virtual feed move scale 2 0.0156250 0.0156250 32 32
  virtual feed move coor 2 -22 -6 32 32
  virtual feed move clip 2 -1 -3 12 12 16 16 32 32
  text move coor 2 -16 -6 32 32
  text move coor 7 -29 5 32 32
  text move coor 10 -16 0 32 32
  text move coor 11 -16 0 32 32
  text move coor 12 -16 0 32 32
  text move coor 13 -16 0 32 32
  next 32
  virtual feed place rect 2 0 0 704 576 0 0 0.0 1.0 1.0 1.0
  virtual feed place rect 4 704 192 1024 576 0 0 0.0 0.333333333 0.3333333333 1.0
  text place 7 7 0 5 -19 0.8 0.8 0.8 1.0 sw
  text place 9 9 0 -64 96 0.8 0.8 0.8 1.0 e
command end

command create swop_feed2_large_feed4_small_middle
  # Scale vf4 to 1/1 and move to 0,0
  virtual feed move scale 4 0.020833333 0.020833333 32 32
  virtual feed move coor 4 -22 -6 32 32
  virtual feed move clip 4 5 0 -10 0 32 32 32 32
  text move coor 4 -16 -6 32 32
  text move coor 9 -29 5 32 32
  # Scale vf2 to 1.0 and move to the left
  virtual feed move scale 2 -0.0156250 -0.0156250 32 32
  virtual feed move coor 2 22 6 32 32
  virtual feed move clip 2 1 3 -12 -12 16 16 32 32
  text move coor 2 16 6 32 32
  text move coor 7 29 -5 32 32
  text move coor 10 16 0 32 32
  text move coor 11 16 0 32 32
  text move coor 12 16 0 32 32
  text move coor 13 16 0 32 32
  next 32
  virtual feed place rect 2 704 192 320 192 16 48 0.0 0.5 0.5 1.0
  virtual feed place rect 4 0 0 704 576 160 0 0.0 1.0 1.0 1.0
  text place 9 9 0 5 -19 0.8 0.8 0.8 1.0 sw
  text place 7 7 0 -64 96 0.8 0.8 0.8 1.0 e
command end

command afterend moving_feed_1_2_3_to_right
command afterend moving_feed_1_2_3_back_in_from_right
command afterend swop_feed4_large_feed1_small_top_right
command afterend swop_feed1_large_feed4_small_top_right
command afterend swop_feed4_large_feed2_small_middle
command afterend swop_feed2_large_feed4_small_middle

command create demo
  next 240
  command restart swop_feed4_large_feed2_small_middle
  next 240
  command restart swop_feed2_large_feed4_small_middle
  next 240
  next 120
  command restart moving_feed_1_2_3_to_right
  next 240
  command restart moving_feed_1_2_3_back_in_from_right
  next 240
  command restart swop_feed4_large_feed1_small_top_right
  next 240
  command restart swop_feed1_large_feed4_small_top_right
  next 240
  command restart demo2
command end

command create demo2
  #next 48
  text place 20 20 0 512 -560 0.8 0.8 0.8 1.0 sw
  text coor 4 324 20
  text coor 9 20 -298
  virtual feed place rect 4 20 20 649 258   0 84 0.0 0.633789 0.633789 1.0
  #virtual feed move clip 4 2 11 5 -3 27 28 32 28

  text coor 1 846 20
  text coor 6 -20 278
  virtual feed place rect 1 689 20 315 258  0  0 0.0 0.4479 0.4479 1.0

  text coor 2 261 298
  text coor 7 -1004 268
  text align 7 left bottom
  text coor 10 261 427
  text coor 11 261 427
  text coor 12 261 427
  text coor 13 261 427
  virtual feed place rect 2 20 298 482 258 0 62 0.0 0.684659 0.684659 1.0

  text coor 3 763 298
  text coor 8 -20 -20
  virtual feed place rect 3 522 298 482 258 0 62 0.0 0.684659 0.684659 1.0

  next 240
  text move coor 4 1 1 28 20
  text move coor 9 -1 8 15 32
  text move coor 1 1 -1 18 20
  text move coor 6 1 -3 20 28
  text move coor 2 20 -4 30 26
  text move coor 7 31 -6 30 28
  text move coor 3 4 3 25 28
  text move coor 8 1 -1 20 9
  text move coor 10 20 -5 30 27
  text move coor 11 20 -5 30 27
  text move coor 12 20 -5 30 27
  text move coor 13 20 -5 30 27
  text alpha 20 0.0
  virtual feed move coor 4 -1 -1 20 20
  virtual feed move scale 4 0.0122070 0.0122070 30 30
  virtual feed move clip 4 5 -3 2 11 32 28 27 28
  virtual place move clip 1 1 2 5 -2 16 24 5 22
  virtual feed move coor 1 1 -1 15 20
  virtual feed move scale 1 -0.0017366667 -0.0017366667 0 0
  virtual feed move coor 2 24 -4 28 21
  virtual feed move scale 2 -0.0061553 -0.0061553 30 30
  virtual feed move coor 3 7 3 26 28
  virtual feed move scale 3 -0.0061553 -0.0061553 30 30
  next 32

  virtual feed place rect 1 704 0 320 192 16 48 0.0 0.5 0.5 1.0
  virtual feed place rect 2 704 192 320 192 16 48 0.0 0.5 0.5 1.0
  virtual feed place rect 3 704 384 320 192 16 48 0.0 0.5 0.5 1.0
  virtual feed place rect 4 0 0 704 576 160 0 0.0 1.0 1.0 1.0
  text coor 4 352 0
  text place 9 9 0 5 -19 0.8 0.8 0.8 1.0 sw
  text place 1 1 1 864 0 1.0 1.0 1.0 1.0 nw
  text place 6 6 0 0 192 0.8 0.8 0.8 1.0 ne
  text place 3 3 1 864 384 1.0 1.0 1.0 1.0 nw
  text place 8 8 0 0 -29 0.8 0.8 0.8 1.0 se
  text place 2 2 1 864 192 0.2 0.2 0.2 1.0 nw
  text align 2 center top
  text place 7 7 0 -64 96 0.8 0.8 0.8 1.0 e
  text align 7 left bottom
  text coor 10 864 288
  text coor 11 864 288
  text coor 12 864 288
  text coor 13 864 288
  text place 20 20 0 352 -19 0.8 0.8 0.8 1.0 sw
  #text alpha 20 0.0
  #text align 20 center bottom
  next 240
  command restart demo
command end

command afterend demo
command afterend demo2
command restart demo2
# This is the definition of the command 'Show'. The command (script)
# says first to execute command (script) Blink_Feed_2_State which is defined
# below. It then overlays text place id 1 and 3, then 2 and 4 until end of
# text place ids. Then text place id is placed last to place it ontop of
# other text, in this case to overlay it the scrolling text
# The 'loop' command is essential and tells Snowmix to loop the command,
# to point at the start of the command before next frame..
command create Show
  demo
  demo2
  moving_feed_1_2_3_to_right
  moving_feed_1_2_3_back_in_from_right
  swop_feed4_large_feed1_small_top_right
  swop_feed1_large_feed4_small_top_right
  swop_feed4_large_feed2_small_middle
  swop_feed2_large_feed4_small_middle
  moving_feed_4_to_top_right
  #moving_feed_1_2_3_to_right
  virtual feed overlay 4
  virtual feed overlay 1..3
  image overlay 0
  Blink_Feed_2_State
  grow_text
  text overlay 1 3
  text overlay 2 4..end
  text overlay 0
  loop
command end

# >>>>>>>>>>>>>>>>>> I M P O R T A N T <<<<<<<<<<<<<<<<<<<<<<<
# This command tells Snowmix to run the command 'Show' for each frame after
# feeds have been stacked as defined by the 'stack command'
overlay finish Show
# >>>>>>>>>>>>>>>>>> I M P O R T A N T <<<<<<<<<<<<<<<<<<<<<<<
#monitor on
