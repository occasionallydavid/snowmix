verbose

require version 0.4.4

# Define allowed remote host IP addresses. If omitted then only 127.0.0.1 will be accepted.
# Format: space separated list. ip or ip/netmask, e.g. 192.168.0.0/24
system host allow 127.0.0.1

# Listen on port 9999 for command control connections
system control port 9999

# Set system Geometry to 1280x800 (2/3 of 1920/1200)
system geometry 1280 800 ARGB

# Set system frame rate to 60
system frame rate 20

# Set output control socket
system socket /tmp/mixer1

# Set feed idle time - feed 0 will always be idle. If no file is given,
# idle image will be all black.
feed idle 0 1

# Define feed #1, set geometry to 1024x576, define as live, set idle time
# to 100 frames and set idle image, scale to 1/2 and specify control socket.
# Furthermore the feed is defined as live meaning Snowmix will drop frames if
# it is late.
feed add 1 Feed #1
feed geometry 1 1280 800
feed live 1
feed idle 1 100 frames/dead-1280x800.bgra
feed scale 1 1 3
feed socket 1 /tmp/feed1-control-pipe

# Define feed #2
feed add 2 Feed #2
feed geometry 2 1280 800
feed live 2
feed idle 2 100 frames/dead-1280x800.bgra
feed scale 2 1 3
feed socket 2 /tmp/feed2-control-pipe

# Define feed #3
feed add 3 Feed #3
feed geometry 3 1280 800
feed live 3
feed idle 3 100 frames/dead-1280x800.bgra
feed scale 3 1 3
feed socket 3 /tmp/feed3-control-pipe

# Define feed #4
feed add 4 Feed #4
feed geometry 4 1280 800
feed live 4
feed idle 4 100 frames/dead-1280x800.bgra
feed scale 4 1 3
feed socket 4 /tmp/feed4-control-pipe

# Define feed #5
feed add 5 Feed #5
feed geometry 5 1280 800
feed live 5
feed idle 5 100 frames/dead-1280x800.bgra
feed scale 5 1 3
feed socket 5 /tmp/feed5-control-pipe

# Define feed #6
feed add 6 Feed #6
feed geometry 6 1280 800
feed live 6
feed idle 6 100 frames/dead-1280x800.bgra
feed scale 6 1 3
feed socket 6 /tmp/feed6-control-pipe

# Define feed #7
feed add 7 Feed #7
feed geometry 7 1280 800
feed live 7
feed idle 7 100 frames/dead-1280x800.bgra
feed scale 7 1 3
feed socket 7 /tmp/feed7-control-pipe

# Define feed #8
feed add 8 Feed #8
feed geometry 8 1280 800
feed live 8
feed idle 8 100 frames/dead-1280x800.bgra
feed scale 8 1 3
feed socket 8 /tmp/feed8-control-pipe

# Define feed #9
feed add 9 Feed #9
feed geometry 9 1280 800
feed live 9
feed idle 9 100 frames/dead-1280x800.bgra
feed scale 9 1 3
feed socket 9 /tmp/feed9-control-pipe

# X/Y        000 427 854            Zoom X/Y (for 32 frames, per frame)
# 000         1   2   3             00/00 13/00 26/00
# 267         4   5   6             00/08 13/08 26/08
# 534         7   8   9             00/16 13/16 26/16

#             X   Y   Frames
# 1 2 3       000/000/32      017/000/25      014/000/38
# 4 5 6       000/007/38      017/007/25      000/007/38
# 7 8 9       000/014/38      000/014/38      000/014/38
#



feed shift 1   0   0
feed shift 2 427   0
feed shift 3 854   0
feed shift 4   0 267
feed shift 5 427 267
feed shift 6 854 267
feed shift 7   0 534
feed shift 8 427 534
feed shift 9 854 534

# Stack (overlay) feed 0-9 in the order given
stack 0 1 2 3 4 5 6 7 8 9

stack 0

message PMM1
# virtual feed add [<vir id> [<feed name>]]  // empty <feed name> deletes entry
# virtual feed source [(feed | image) <vir id> (<feed id> | <image id>)]
command create create_virtual_feeds
  virtual feed add 1 Feed #1
  virtual feed source feed 1 1
  virtual feed add 2 Feed #2
  virtual feed source feed 2 2
  virtual feed add 3 Feed #3
  virtual feed source feed 3 3
  virtual feed add 4 Feed #4
  virtual feed source feed 4 4
  virtual feed add 5 Feed #5
  virtual feed source feed 5 5
  virtual feed add 6 Feed #6
  virtual feed source feed 6 6
  virtual feed add 7 Feed #7
  virtual feed source feed 7 7
  virtual feed add 8 Feed #8
  virtual feed source feed 8 8
  virtual feed add 9 Feed #9
  virtual feed source feed 9 9
command end

message PMM1+

# virtual feed place rect [<vir id> [<x> <y> <width> <height> <src_x> <src_y> [<rotation> <scale_x> <scale_y> <alpha>]]]
command create place_virtual_feeds
  virtual feed place rect 1   0   0 1280 800   0   0 0.0 0.3333 0.3333 1.0
  virtual feed place rect 2 427   0 1280 800   0   0 0.0 0.3333 0.3333 1.0
  virtual feed place rect 3 854   0 1280 800   0   0 0.0 0.3333 0.3333 1.0
  virtual feed place rect 4   0 267 1280 800   0   0 0.0 0.3333 0.3333 1.0
  virtual feed place rect 5 427 267 1280 800   0   0 0.0 0.3333 0.3333 1.0
  virtual feed place rect 6 854 267 1280 800   0   0 0.0 0.3333 0.3333 1.0
  virtual feed place rect 7   0 534 1280 800   0   0 0.0 0.3333 0.3333 1.0
  virtual feed place rect 8 427 534 1280 800   0   0 0.0 0.3333 0.3333 1.0
  virtual feed place rect 9 854 534 1280 800   0   0 0.0 0.3333 0.3333 1.0
  loop
command end

message PMM2
create_virtual_feeds
place_virtual_feeds
message PMM3

command create Show
  virtual feed overlay 1
  #virtual feed overlay 2
  #virtual feed overlay 3
  #virtual feed overlay 4
  virtual feed overlay 5
  #virtual feed overlay 6
  #virtual feed overlay 7
  #virtual feed overlay 8
  #virtual feed overlay 9
  loop
command end

command create PreShow
  loop
command end


# >>>>>>>>>>>>>>>>>> I M P O R T A N T <<<<<<<<<<<<<<<<<<<<<<<
# This command tells Snowmix to run the command 'Show' for each frame after
# feeds have been stacked as defined by the 'stack command'
overlay finish Show
# >>>>>>>>>>>>>>>>>> I M P O R T A N T <<<<<<<<<<<<<<<<<<<<<<<
overlay pre PreShow

####
#### WORKAROUND. VIRTUAL FEED OVERLAY NEEDS TEXT SUBSYSTEM..... #####
####
text String

# include audio setup
#include ini/audio
